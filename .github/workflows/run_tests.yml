name: Test Code Changes
on:
  pull_request:
    branches: [main]
jobs:
  test-django:
    name: Python Test Suite
    strategy:
      matrix:
        python-version: [3.7, 3.8, 3.9, "3.10"]
    env:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      D3PLOY_DEBUG: true
      D3PLOY_TEST_BUCKET: d3ploy-tests-${{ matrix.python-version }}
    runs-on: ubuntu-latest
    steps:
      - uses: dryan/action-polynotify@v1
        with:
          slack_webhook_url: ${{ secrets.SLACK_WEBHOOK_URL }}
          message: Running d3ploy tests on Python ${{ matrix.python-version }}
      - uses: actions/checkout@v2
      - name: Setup Python ${{ matrix.python-version }}
        uses: actions/setup-python@v1
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install poetry
        run: |
          curl -sSL https://raw.githubusercontent.com/python-poetry/poetry/master/install-poetry.py | python
          sudo ln -s $HOME/.poetry/bin/poetry /usr/local/bin/poetry
          poetry config virtualenvs.path ~/.poetry/environments
      - name: Cache Python packages
        uses: actions/cache@v1
        id: poetry-cache
        env:
          cache-name: cache-poetry-packages
        with:
          path: ~/.poetry/environments
          key: ${{ runner.os }}-python-${{ matrix.python-version }}-build-${{ env.cache-name }}-${{ hashFiles('**/poetry.lock') }}
          restore-keys: |
            ${{ runner.os }}-python-${{ matrix.python-version }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-python-${{ matrix.python-version }}-build-
            ${{ runner.os }}-python-${{ matrix.python-version }}-
      - name: Install Python dependencies
        run: |
          poetry install
        if: steps.poetry-cache.outputs.cache-hit != 'true'
      - name: Run Black Tests
        run: poetry run black --check .
      - name: Run Flake8 Tests
        run: poetry run flake8
      - name: Run isort Tests
        run: poetry run isort --recursive --check-only .
      - name: Run Python Unit Tests
        run: |
          poetry run coverage erase
          poetry run coverage run --source='d3ploy' tests/test.py "$@"
          poetry run coverage html
          poetry run coverage report --fail-under=100 --skip-covered
      - name: Store Python coverage results
        uses: actions/upload-artifact@v1
        with:
          name: python-coverage
          path: htmlcov
      - uses: dryan/action-polynotify@v1
        with:
          slack_webhook_url: ${{ secrets.SLACK_WEBHOOK_URL }}
          message: d3ploy tests on Python ${{ matrix.python-version }} succeeded
        if: success()
      - uses: dryan/action-polynotify@v1
        with:
          slack_webhook_url: ${{ secrets.SLACK_WEBHOOK_URL }}
          message: d3ploy tests on Python ${{ matrix.python-version }} failed
        if: failure()
